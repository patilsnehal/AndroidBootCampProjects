package com.codepath.apps.basictwitter.models;

import java.io.Serializable;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONObject;

import android.text.format.DateUtils;

public class Tweet implements Serializable {
	private static final long serialVersionUID = 5758707162546258507L;
	private String uid;
	private String body;
	private String createAt;
	private User user;

	public static Tweet fromJson(JSONObject jsonObject) {
		Tweet tweet = new Tweet();
		// Extract value from JSON to populate tweet.
		try {
			tweet.body = jsonObject.getString("text");
			tweet.uid = jsonObject.getString("id");
			String date = jsonObject.getString("created_at");
			 tweet.createAt
			  
			 tweet.createAt = DateUtils.getRelativeDateTimeString(this, now.getTime(), DateTimeUtils.MINUTE_IN_MILLIS,DateTimeUtils.WEEK_IN_MILLIS, 0);  
			tweet.user = User.fromJson(jsonObject.getJSONObject("user"));

		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		return tweet;
	}

	public String getUid() {
		return uid;
	}

	public String getBody() {
		return body;
	}

	public String getCreateAt() {
		return createAt;
	}

	public User getUser() {
		return user;
	}

	public static ArrayList<Tweet> fromJSONArray(JSONArray jsonArray) {
		ArrayList<Tweet> tweets = new ArrayList<Tweet>(jsonArray.length());
		for (int i = 0; i < jsonArray.length(); i++) {
			JSONObject tweetJson = null;
			try {
				tweetJson = jsonArray.getJSONObject(i);
			} catch (Exception e) {
				e.printStackTrace();
				continue;
			}

			Tweet tweet = Tweet.fromJson(tweetJson);
			if (tweet != null) {
				tweets.add(tweet);
			}
		}
		return tweets;
	}

	@Override
	public String toString() {
		return getBody() + getUser().getScreenName();
	}

//	public String getRelativeTimeAgo(String rawJsonDate)
//			throws java.text.ParseException {
//		String twitterFormat = "EEE MMM dd HH:mm:ss ZZZZZ yyyy";
//		SimpleDateFormat sf = new SimpleDateFormat(twitterFormat,
//				Locale.ENGLISH);
//		sf.setLenient(true);
//
//		String relativeDate = "";
//		try {
//			long dateMillis = sf.parse(rawJsonDate).getTime();
//			relativeDate = DateUtils.getRelativeTimeSpanString(dateMillis,
//					System.currentTimeMillis(), DateUtils.SECOND_IN_MILLIS)
//					.toString();
//		} catch (ParseException e) {
//			e.printStackTrace();
//		}
//
//		return relativeDate;
//	}
}
